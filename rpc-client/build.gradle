def projectName = "ehkd-poc-corda-api-sdk"
jar.archiveBaseName = projectName

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation "org.projectlombok:lombok:$lombok_version"

    // Corda dependencies.
    compile "net.corda:corda-core:$corda_core_release_version"
    compile "net.corda:corda-node-api:$corda_release_version"
    compile "net.corda:corda:$corda_release_version"
    compile "net.corda:corda-rpc:$corda_release_version"
    compile "net.corda:corda-jackson:$corda_release_version"

    compile("org.springframework.boot:spring-boot-starter-websocket:$spring_boot_version") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }

    compile("org.springframework.boot:spring-boot-starter-security:$spring_boot_version") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
    compileOnly "org.projectlombok:lombok:$lombok_version"
    annotationProcessor "org.projectlombok:lombok:$lombok_version"

    implementation("org.postgresql:postgresql:42.5.0")
    testCompileOnly "org.projectlombok:lombok:$lombok_version"
    testAnnotationProcessor "org.projectlombok:lombok:$lombok_version"

    testImplementation("org.springframework.boot:spring-boot-starter-test:$spring_boot_version")
    testCompile "junit:junit:4.13.1"

    compile project(v3_contract)
    compile project(v3_workflow)
}

configurations {
    all*.exclude module: 'spring-boot-starter-logging'
    all*.exclude module: 'logback-classic'
}

jar {
    enabled = true
    getCustomVersion()
}

//生成版本号
def getCustomVersion() {
    String[]vs=project.version.toString().split("-")
    //git上的提交次数
    Process process = "git rev-list --count HEAD".execute()
    process.waitFor()
    project.version = vs[0]+"."+process.getText().toInteger()+"-"+vs[1]
}

//上传maven私服
publishing {
    publications {
        maven(MavenPublication) {
            println '************************************************************'
            println '* This project version data                                 '
            println "* groupId : $project.group                                  "
            println "* artifactId : $projectName                                "
            println "* version : $project.version                                "
            println '************************************************************'
            groupId project.group
            artifactId projectName
            version project.version
            //如果是war包填写components.web，如果是jar包填写components.java
            from components.java
            //配置上传源码
            artifact sourceJar {
                classifier "sources"
            }
        }
    }
    repositories {
        maven {
            //指定要上传的maven私服仓库
            if (project.version.endsWith('-SNAPSHOT')) {
                url = "$maven_url/repository/maven-snapshots/"
            } else {
                url = "$maven_url/repository/maven-releases/"
            }
            credentials {
                username "$maven_username"
                password "$maven_password"
            }
        }
    }
}

